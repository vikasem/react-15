{"version":3,"file":"static/js/861.5f92eba2.chunk.js","mappings":"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","sources":["webpack://my-react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusFunc.jsx","components/Profile/ProfileInfo/ProfieBlockForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"changeBlock\":\"MyPosts_changeBlock__6ZmFa\",\"post\":\"MyPosts_post__GRzoV\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__eYi-7\"};","import React, { Component } from 'react';\r\nimport classes from './Post.module.css';\r\nlet Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://i.pinimg.com/originals/e7/88/04/e78804c9bd6a4647ae626745f2f88b48.jpg' />\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.count}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utills/validators';\r\nimport { Textarea } from '../../common/FormsControls';\r\n\r\nlet MyPosts = (props) => {\r\n    let postData = props.posts\r\n    let postsElements = postData.map(post => <Post message={post.message} count={post.count} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        values.newPostText = \"\";\r\n    }\r\n    return (\r\n        <div className={classes.changeBlock}>\r\n            <h3>My posts</h3>\r\n            <NewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={classes.post}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nlet NewPostTextForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"}\r\n                validate={[required, maxLength10]}></Field>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet NewPostReduxForm = reduxForm({form:\"NewMyPost\"})(NewPostTextForm)\r\nexport default MyPosts\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts.jsx';\r\nimport { addPost } from '../../../redux/profileReducer'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    posts: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer\r\n","// extracted by mini-css-extract-plugin\nexport default {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__UFW7v\",\"panorama\":\"ProfileInfo_panorama__4dyHA\",\"noAvatar\":\"ProfileInfo_noAvatar__VGWQJ\",\"contacts\":\"ProfileInfo_contacts__-T3Uo\"};","import React from \"react\";\r\nimport { useEffect, useState } from \"react\"\r\n\r\nlet ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    \r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{status || \"No status\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onChangeStatus} onBlur={deactivateEditMode} value={status} autoFocus />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from '../../common/FormsControls'\r\nimport classes from './ProfileInfo.module.css';\r\nimport s from '../../common/FormsControls.module.css'\r\n\r\n\r\nlet ProfileBlockForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {\r\n                props.error && \r\n                <div className={s.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Save</button>\r\n            </div>\r\n            <div>\r\n                <b>Full name</b>: <Field placeholder='Full name' name='fullName' component={Input}></Field>\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: <Field name='lookingForAJob' component={Input} type=\"checkbox\"></Field>\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>: <Field placeholder='Skills' name='lookingForAJobDescription' component={Textarea} ></Field>\r\n            </div>\r\n            <div>\r\n                <b>About Me</b>: <Field placeholder='About Me' name='aboutMe' component={Textarea} ></Field>\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: { Object.keys(props.profile.contacts).map(key => {\r\n                    return (<div className={classes.contacts}>\r\n                        <b> {key}: {<Field placeholder={key} name={'contacts.'+key} component={Input}></Field>}</b>\r\n                    </div>)\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet ProfileBlockFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileBlockForm)\r\n\r\nexport default ProfileBlockFormReduxForm","import React, { Component } from 'react';\r\nimport Preloader from '../../common/Preloader';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatusFunc';\r\nimport userPhoto from '../../../assets/images/no_avatar.jpg'\r\nimport { useState } from 'react';\r\nimport ProfileBlockFormReduxForm from './ProfieBlockForm';\r\n\r\nlet ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n\r\n    }\r\n    let mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    let onSubmit = (formData) =>{\r\n        console.log(formData)\r\n        // console.log(props.profile.contacts)\r\n        // props.saveProfile(formData)\r\n        // setEditMode(false)\r\n        props.saveProfile(formData).then(\r\n            ()=>{\r\n                setEditMode(false)\r\n            }\r\n        )\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            {/* <img className = {classes.panorama} src='https://c.wallhere.com/photos/84/7f/1600x900_px_landscape-1057343.jpg!d' /> */}\r\n            <div className={classes.discriptionBlock}>\r\n                <img src={props.profile.photos.large || userPhoto} className={classes.noAvatar} />\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n                <div>\r\n                    {props.isOwner && <div><b>Add a photo</b>: <input type={\"file\"} onChange={mainPhotoSelected} /></div>}\r\n                </div>\r\n                {editMode \r\n                ? <ProfileBlockFormReduxForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/> \r\n                : <ProfileBlock profile = {props.profile} goToEditMode = {()=>{setEditMode(true)}} isOwner = {props.isOwner}/> }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet ProfileBlock = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {props.isOwner && <button onClick={props.goToEditMode}>Edit</button>}\r\n            </div>\r\n            <div>\r\n                <b>Full name</b>: {props.profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About Me</b>: {props.profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nlet Contact = (props) => {\r\n    return (\r\n        <div className={classes.contacts}><b>{props.contactTitle}</b>: {props.contactValue}</div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React, { Component } from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\nlet Profile = (props) => {\r\n    return (\r\n        <div>\r\n    \r\n            <ProfileInfo \r\n            isOwner = {props.isOwner} \r\n            profile = {props.profile}\r\n            status = {props.status} \r\n            updateStatus = {props.updateStatus} \r\n            savePhoto = {props.savePhoto}\r\n            saveProfile = {props.saveProfile} />\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile","import React, { Component } from 'react';\r\nimport Profile from './Profile.jsx';\r\nimport { connect } from 'react-redux';\r\nimport { profileUser, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams\r\n} from \"react-router\";\r\nimport { withAuthRedirect } from '../HOC/withAuthRedirect.jsx';\r\nimport { compose } from 'redux'\r\nimport { useEffect } from 'react';\r\n\r\nlet ProfileContainer = (props) => {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    let router={ location, navigate, params }\r\n    useEffect(()=> {\r\n        let userId = router.params.userId\r\n        if (!userId){\r\n            userId = props.userId\r\n        }\r\n        props.profileUser(userId);\r\n        props.getStatus(userId)\r\n    },[router.params.userId])\r\n    return (\r\n        <Profile {...props} profile = {props.profile} \r\n        status = {props.status} \r\n        updateStatus = {props.updateStatus}\r\n        isOwner = {!router.params.userId}\r\n        savePhoto = {props.savePhoto}\r\n        saveProfile = {props.saveProfile} />\r\n    )\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {profileUser, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withAuthRedirect)\r\n    (ProfileContainer)"],"names":["props","className","classes","src","message","count","maxLength10","maxLengthCreator","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","postsElements","posts","map","post","values","addPost","newPostText","connect","state","profilePage","postData","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","error","s","placeholder","Input","type","Object","keys","profile","contacts","key","ProfileBlock","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","Preloader","photos","large","userPhoto","target","files","length","savePhoto","initialValues","formData","console","log","saveProfile","then","compose","userId","auth","profileUser","getStatus","withAuthRedirect","router","location","useLocation","navigate","useNavigate","params","useParams"],"sourceRoot":""}